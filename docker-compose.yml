services:
  db:
    image: postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_SERVER
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    command: uvicorn main:app --host 0.0.0.0 --reload
    volumes:
      - ./backend/app:/app
    ports:
      - 8000:8000
    environment:
      - IN_PROD
      - CORS_ORIGINS
      - ROOT_ROUTE
      - HMAC_KEY
      - TWILIO_SERVICE_SID
      - TWILIO_AUTH_TOKEN
      - TWILIO_ACCOUNT_SID
      - TWILIO_SENDER_NUMBER
      - DEV_RECEIVER_NUMBER
      - POSTGRES_SERVER
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_TEST_DB
      - SMTP_USERNAME
      - SMTP_PASSWORD
      - SMTP_SERVER
      - JWT_SECRET
      - JWT_ALGORITHM
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    volumes:
      - ./frontend/app:/app
    ports:
      - 3000:3000
    environment:
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_BACKEND_URL
      - NEXT_PUBLIC_FRONTEND_URL
      - NEXT_PUBLIC_BACKEND_HOST
      - NEXT_PUBLIC_BACKEND_PORT
      - NEXT_PUBLIC_PROD

volumes:
  db-data:
